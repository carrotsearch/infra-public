name: "Create a release tag and github release"
description: "Create a release tag and github release"

inputs:
  tag:
    description: 'Release tag (e.g. release/2.0.1)'
    required: true

  name:
    description: 'Release name, leave empty to use tag'
    required: false

  removeExistingReleaseAndTag:
    description: 'Remove existing release and tag'
    type: boolean
    required: false
    default: false

  artifacts:
    description: 'A glob or paths to artifacts to include in the release (e.g., releases/*)'
    required: true

  token:
    description: "Github token."
    required: false

runs:
 using: "composite"
 steps:
    - name: Remove existing release and tag
      if: ${{ inputs.removeExistingReleaseAndTag }}
      shell: bash
      run: |
        if gh release delete "${{ inputs.tag }}" --yes --cleanup-tag; then
          echo "Release deleted: ${{ inputs.tag }}"
          # Wait a bit so that the deletion is confirmed and propagates.
          sleep 5
        else
          echo "::warning::Can't delete an existing release with this tag: ${{ inputs.tag }}?"
          gh release list
        fi
      env:
        GH_TOKEN: ${{ inputs.token || github.token }}

    - name: Create release
      uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
      with:
        draft: false
        commit: ${{ github.ref }}
        tag: ${{ inputs.tag }}
        name: ${{ inputs.name }}
        artifacts: ${{ inputs.artifacts }}
        allowUpdates: false
        artifactErrorsFailBuild: true
        generateReleaseNotes: true
        token: ${{ inputs.token || github.token }}
